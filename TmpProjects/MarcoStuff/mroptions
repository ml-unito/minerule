# Options related to the ODBC connection
odbc::{
  name=bbdemo
  username=root
  password=mysql
  cacheWrites=True
}

miningalgorithms::{
  rulesmining::{
  #preferredAlgorithm=ConstrainedItemsets
  #preferredAlgorithm=Care
  #preferredAlgorithm=PartitionBase
  #preferredAlgorithm=PartitionWithClusters
  #preferredAlgorithm=BFSWithGidsAndCross
  #preferredAlgorithm=BFSWithGidsNoCross

  # Options related to Partition algorithms
  partitionbase::{
    rowsPerPartition=1000000
  }

  # Options related to Partition algorithms
  partitionwithclusters::{
    rowsPerPartition=7000000
    #rowsPerPartition=200000
  }

  # Options related to FPGrowth algorithms
  fpgrowth::{
    algoType=Original
  }
 }
 itemsetsmining::{
  preferredAlgorithm=ConstrainedItemsets
 }
}


# Options related to Optimizations
optimizations::{
  enableOptimizations=True
}

# Options related to the parsing algorithms
parsers::{
# Parsers log stream, valid names are:
#   <stdout>, <stderr> and any writeable file.
 #logfile=/dev/null
 logfile=<stdout>
# The following four options allows to set constraint on
# cardinalities of elements which appears in the body/head
# part of rules. The constraints set here 'win' on the ones
# in minerules (i.e., if you say '1..n' as BODY in your minerule
# but set it to 1..5 here, than 1..5 will be used instead.
 minBodyElems=1
 maxBodyElems=5
 minHeadElems=0
 maxHeadElems=20
}

safety::overwriteHomonymMinerules=True

# Options related to streams, note that they are commented.
# the reason is that the following conresponds to default 
# settings instead of the actual ones.
# logstream::{
#    stream=<stdout> 
# }
# errstream::{
#    stream=<stderr> 
# }
